{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleGoodButton","event","good","button","currentTarget","dataset","cy","setState","handleClearButton","this","className","type","onClick","map","isSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAMEC,iBAAmB,SAACC,EAClBC,GACA,IAAMC,EAASF,EAAMG,cAEK,cAAtBD,EAAOE,QAAQC,IACjBH,EAAOE,QAAQC,GAAK,eACpB,EAAKC,SAAS,CAAER,aAAcG,MAE9BC,EAAOE,QAAQC,GAAK,YACpB,EAAKC,SAAS,CAAER,aAAc,OAfpC,EAmBES,kBAAoB,WAClB,EAAKD,SAAS,CAAER,aAAc,MApBlC,4CAuBE,WAAU,IAAD,OACCA,EAAiBU,KAAKX,MAAtBC,aAER,OACE,uBAAMW,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,oBACMX,EAAY,UAAMA,EAAN,OAA0B,WAD5C,aAEGA,EAEG,mCAEE,wBACE,UAAQ,cACRY,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,sBAIlB,QAGN,uBAAOE,UAAU,QAAjB,SACE,gCAEId,EAAMiB,KAAI,SAAAX,GACR,IAAMY,EAAaZ,IAASH,EAE5B,OACE,qBACE,UAAQ,OAERW,UAAWI,EACP,+BACA,GALN,UAOE,6BACE,wBACE,UAAQ,YACRH,KAAK,SACLD,UAAWI,EAAa,iBAAmB,SAC3CF,QAAS,SAACX,GACR,EAAKD,iBAAiBC,EAAOC,IALjC,SAQGY,EAAa,IAAM,QAIxB,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGR,MAnBEA,iBAtDzB,GAAyBa,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f4297abe.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface S {\n  selectedGood: string;\n}\n\n// export const App: React.FC = () => (\nexport class App extends React.Component<{}, S> {\n  state = {\n    selectedGood: 'Jam',\n  };\n  // React.MouseEvent<HTMLButtonElement>\n\n  handleGoodButton = (event: React.MouseEvent<HTMLButtonElement>,\n    good: string) => {\n    const button = event.currentTarget;\n\n    if (button.dataset.cy === 'AddButton') {\n      button.dataset.cy = 'RemoveButton';\n      this.setState({ selectedGood: good });\n    } else {\n      button.dataset.cy = 'AddButton';\n      this.setState({ selectedGood: '' });\n    }\n  };\n\n  handleClearButton = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {`${selectedGood ? `${selectedGood} is` : 'No goods'} selected` }\n          {selectedGood\n            ? (\n              <>\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.handleClearButton}\n                />\n              </>\n            )\n            : null}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {\n              goods.map(good => {\n                const isSelected = good === selectedGood;\n\n                return (\n                  <tr\n                    data-cy=\"Good\"\n                    key={good}\n                    className={isSelected\n                      ? 'has-background-success-light'\n                      : ''}\n                  >\n                    <td>\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className={isSelected ? 'button is-info' : 'button'}\n                        onClick={(event) => {\n                          this.handleGoodButton(event, good);\n                        }}\n                      >\n                        {isSelected ? '-' : '+'}\n                      </button>\n                    </td>\n\n                    <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                      {good}\n                    </td>\n                  </tr>\n                );\n              })\n            }\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}