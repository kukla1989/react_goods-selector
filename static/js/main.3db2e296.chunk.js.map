{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleGoodButton","event","good","currentTarget","dataset","cy","setState","handleClearButton","this","className","type","onClick","map","isSelected","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,iBAAmB,SACjBC,EACAC,GAI0B,cAFXD,EAAME,cAEVC,QAAQC,GACjB,EAAKC,SAAS,CAAEP,aAAcG,IAE9B,EAAKI,SAAS,CAAEP,aAAc,MAdpC,EAkBEQ,kBAAoB,WAClB,EAAKD,SAAS,CAAEP,aAAc,MAnBlC,4CAsBE,WAAU,IAAD,OACCA,EAAiBS,KAAKV,MAAtBC,aAER,OACE,uBAAMU,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,oBACMV,EAAY,UAAMA,EAAN,OAA0B,WAD5C,aAEGA,GAEG,mCAEE,wBACE,UAAQ,cACRW,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,yBAKxB,uBAAOE,UAAU,QAAjB,SACE,gCAEIb,EAAMgB,KAAI,SAAAV,GACR,IAAMW,EAAaX,IAASH,EAE5B,OACE,qBACE,UAAQ,OAERU,UAAWK,IAAW,CACpB,+BAAgCD,IAJpC,UAOE,6BACE,wBACE,UAASA,EAAa,eAAiB,YACvCH,KAAK,SACLD,UAAWK,IAAW,SACpB,CACE,UAAWD,IAEfF,QAAS,SAACV,GACR,EAAKD,iBAAiBC,EAAOC,IARjC,SAWGW,EAAa,IAAM,QAIxB,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGP,MAtBEA,iBAnDzB,GAAyBa,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3db2e296.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface S {\n  selectedGood: string;\n}\n\nexport class App extends React.Component<{}, S> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleGoodButton = (\n    event: React.MouseEvent<HTMLButtonElement>,\n    good: string,\n  ) => {\n    const button = event.currentTarget;\n\n    if (button.dataset.cy === 'AddButton') {\n      this.setState({ selectedGood: good });\n    } else {\n      this.setState({ selectedGood: '' });\n    }\n  };\n\n  handleClearButton = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {`${selectedGood ? `${selectedGood} is` : 'No goods'} selected` }\n          {selectedGood\n            && (\n              <>\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.handleClearButton}\n                />\n              </>\n            )}\n        </h1>\n        <table className=\"table\">\n          <tbody>\n            {\n              goods.map(good => {\n                const isSelected = good === selectedGood;\n\n                return (\n                  <tr\n                    data-cy=\"Good\"\n                    key={good}\n                    className={classNames({\n                      'has-background-success-light': isSelected,\n                    })}\n                  >\n                    <td>\n                      <button\n                        data-cy={isSelected ? 'RemoveButton' : 'AddButton'}\n                        type=\"button\"\n                        className={classNames('button',\n                          {\n                            'is-info': isSelected,\n                          })}\n                        onClick={(event) => {\n                          this.handleGoodButton(event, good);\n                        }}\n                      >\n                        {isSelected ? '-' : '+'}\n                      </button>\n                    </td>\n\n                    <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                      {good}\n                    </td>\n                  </tr>\n                );\n              })\n            }\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}